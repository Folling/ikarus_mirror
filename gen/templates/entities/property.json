{
    "name": "property",
    "description": "Represents a typed piece of information that instances should store.",
    "generate_struct": false,
    "depends_on": [
        "../project",
        "../status",
        "../id",
        "propertytype",
        "values/propertyvalue"
    ],
    "functions": [
        {
            "name": "create",
            "description": "Creates a new property. Note that values are lazily created.",
            "versions": [
                {
                    "description": null,
                    "return_type": [
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The id of the created property or id_null() if an error occurred."
                        }
                    ],
                    "parameters": [
                        {
                            "type": "Project *",
                            "name": "project",
                            "description": "The project in which to create the property."
                        },
                        {
                            "type": "Id",
                            "name": "parent_folder",
                            "description": "The template-scoped folder in which the property should be placed."
                        },
                        {
                            "type": "size_t",
                            "name": "position",
                            "description": "The position in the parent folder at which the property should be placed."
                        },
                        {
                            "type": "Id",
                            "name": "template",
                            "description": "The template the property should be created for."
                        },
                        {
                            "type": "char const*",
                            "name": "name",
                            "description": "The name the property should have. Doesn't have to be unique."
                        },
                        {
                            "type": "PropertyType",
                            "name": "type",
                            "description": "The type of property that should be created. Can be changed in a lossy fashion later."
                        },
                        {
                            "type": "char const*",
                            "name": "default_value",
                            "description": "JSON value representing the default value. If null a sensible default will be used, see propertytype.h for more information on the default values."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "delete",
            "description": "Deletes an property and all associated values from a template.",
            "versions": [
                {
                    "description": null,
                    "return_type": [],
                    "parameters": [
                        {
                            "type": "Project *",
                            "name": "project",
                            "description": "The project in which the property resides."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property to delete."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "get_template",
            "description": "Fetches the template of an property.",
            "versions": [
                {
                    "description": null,
                    "return_type": [
                        {
                            "type": "Id",
                            "name": "template",
                            "description": "The id of the template the property belongs to."
                        }
                    ],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to fetch the template for."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "get_type",
            "description": "Fetches the type of an property.",
            "versions": [
                {
                    "description": null,
                    "return_type": [
                        {
                            "type": "PropertyType",
                            "name": "type"
                        }
                    ],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to fetch the type for."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "get_default_value",
            "description": "Fetches the default value of an property.",
            "versions": [
                {
                    "description": null,
                    "return_type": [
                        {
                            "type": "char const*",
                            "name": "value"
                        }
                    ],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to fetch the default value for."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "set_default_value",
            "description": "Changes the default value for an property. Note that this doesn't alter any values as values are stored lazily.",
            "versions": [
                {
                    "description": null,
                    "return_type": [],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to change the default value"
                        },
                        {
                            "type": "char const*",
                            "name": "new_default_value",
                            "description": "The new default value for the property. If null, a sensible default will be chosen. See propertytype.h for more information on the chosen default values."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "get_value",
            "description": "Fetches the value of an instance at a specific property",
            "versions": [
                {
                    "description": null,
                    "return_type": [
                        {
                            "type": "char const*",
                            "name": "value"
                        }
                    ],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to fetch the value."
                        },
                        {
                            "type": "Id",
                            "name": "instance",
                            "description": "The instance for which to fetch the value."
                        }
                    ],
                    "flags": []
                }
            ]
        },
        {
            "name": "get_values",
            "description": "Fetches all values and their related instances for this property.",
            "versions": [
                {
                    "description": null,
                    "return_type": [],
                    "parameters": [
                        {
                            "type": "Project*",
                            "name": "project",
                            "description": "The project this property resides in."
                        },
                        {
                            "type": "Id",
                            "name": "property",
                            "description": "The property for which to fetch the values."
                        },
                        {
                            "type": "PropertyValue*",
                            "name": "values_out",
                            "description": "A pre-allocated buffer which will be filled with the values."
                        },
                        {
                            "type": "size_t",
                            "name": "values_out_size",
                            "description": "The size of the pre-allocated buffer. You can use `get_instance_count` on the associated template to obtain the ideal size of the buffer."
                        }
                    ],
                    "flags": []
                }
            ]
        }
    ]
}
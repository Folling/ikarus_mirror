BasedOnStyle: Google

AccessModifierOffset: -4

AlignAfterOpenBracket: BlockIndent
AlignArrayOfStructures: Right
AlignConsecutiveAssignments:
  Enabled: false
AlignConsecutiveBitFields:
  Enabled: false
AlignConsecutiveDeclarations:
  Enabled: false
AlignConsecutiveMacros: AcrossEmptyLines
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: true

AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true

AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes

BinPackArguments: false
BinPackParameters: false

BitFieldColonSpacing: Both

BraceWrapping:
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: MultiLine
  AfterEnum: false
  AfterExternBlock: false
  AfterFunction: false
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyNamespace: false
  SplitEmptyRecord: false

BreakBeforeBinaryOperators: None
BreakBeforeBraces: Attach
BreakBeforeConceptDeclarations: Always
# BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: false
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: false

ColumnLimit: 140

CompactNamespaces: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4

Cpp11BracedListStyle: true

DerivePointerAlignment: false

EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always

FixNamespaceComments: false

IncludeBlocks: Regroup
IncludeCategories:
  # Relative Includes
  # "blubb.h" / "blubb/blubber.h"
  - Regex: '^".+\.(h|hpp)"$'
    Priority: 1

  # C Includes
  # <string.h>
  - Regex: '^<[a-z0-9_]+\.h>$'
    Priority: 2

  # C++ Includes
  # <string>
  - Regex: '^<[a-z0-9_]+>$'
    Priority: 3

  # expected
  # <expected/ranges.hpp>
  - Regex: '^<expected/.*>$'
    Priority: 4

  # libfmt
  # <fmt/core.hpp>
  - Regex: '^<fmt/.*>$'
    Priority: 5

  # nlohmann::json
  # <nlohmann/json.hpp>
  - Regex: '^<nlohmann/.*>$'
    Priority: 6

  # ranges
  # <range-v3/ranges.hpp>
  - Regex: '^<range-v3/.*>$'
    Priority: 7

IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: NoIndent
IndentGotoLabels: true
IndentPPDirectives: None
IndentRequiresClause: true
IndentWidth: 4
IndentWrappedFunctionNames: false
InsertBraces: true

# InsertNewlineAtEOF: true
# IntegerLiteralSeparator:
#  Binary: 0
#  Decimal: 3
#  Hex: -1

KeepEmptyLinesAtTheStartOfBlocks: false

LambdaBodyIndentation: Signature
Language: Cpp

# LineEnding: LF

MaxEmptyLinesToKeep: 1

NamespaceIndentation: None

PackConstructorInitializers: Never

PointerAlignment: Middle
QualifierAlignment: Right
# QualifierOrder: [ 'friend', 'constexpr', 'inline', 'static', 'type', 'const', 'volatile' ]
ReferenceAlignment: Left

ReflowComments: true
# RemoveSemicolon: true

RequiresClausePosition: OwnLine
# RequiresExpressionIndentation: OuterScope

SeparateDefinitionBlocks: Always

SortIncludes: CaseInsensitive
SortUsingDeclarations: true

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false

SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: 1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: c++20

TabWidth: 4
UseTab: Never
